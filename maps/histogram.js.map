{"version":3,"file":"../javascript/histogram.js","names":["myChart","setHistogram","async","obj","localStorage","setItem","date","JSON","stringify","fuel","alchool","alchoolPrice","gasoline","gasPrice","getHistogram","Object","entries","map","x","filter","includes","getItem","plotHistogramChart","data","totalResults","dataPlot","dataOrderDateByFirst","data2","labels","datasets","label","backgroundColor","borderColor","fill","cubicInterpolationMode","tension","pointStyle","pointRadius","pointHoverRadius","i","push","parse","Date","toLocaleString","timeZoneName","split","config","type","Chart","document","querySelector","updateLineChart","length","update","plotHistogramTable","dataOrderDateByLast","html","limI","eval","style","currency","$","sort","a","b"],"sources":["histogram.js"],"sourcesContent":["let myChart = \"\";\r\n\r\nexport let setHistogram = async function(obj){\r\n    localStorage.setItem(\"price-\"+obj.date, JSON.stringify({\"fuel\":obj.fuel, \"alchool\":obj.alchoolPrice, \"gasoline\":obj.gasPrice, \"date\": obj.date}))\r\n}\r\n\r\n//gets all entries and order it as blog order posts\r\nexport let getHistogram = function(){\r\n    let keys = Object.entries(localStorage)\r\n    .map( x => x[0]  )\r\n    .filter(x=> x.includes('price-'))\r\n    .map( x=> localStorage.getItem(x) )\r\n    return keys;\r\n}\r\n\r\nexport let plotHistogramChart = async function(data, totalResults){\r\n    let dataPlot = data;\r\n    \r\n\r\n    dataPlot = dataOrderDateByFirst(data)\r\n\r\n    //chart basic definition\r\n    let data2 = {\r\n        labels: [],\r\n        datasets: [\r\n        {\r\n            label: 'Gasolina',\r\n            backgroundColor: 'rgb(255, 99, 132)',\r\n            borderColor: 'rgb(255, 99, 132)',\r\n            data: [],\r\n            fill: false,\r\n            cubicInterpolationMode: 'monotone',\r\n            tension: 0.4,\r\n            \r\n            pointStyle: 'circle',\r\n            pointRadius: 8,\r\n            pointHoverRadius: 16\r\n        },\r\n        {\r\n            label: 'Álcool',\r\n            backgroundColor: 'rgb(0, 99, 132)',\r\n            borderColor: 'rgb(0, 99, 132)',\r\n            data: [],\r\n            fill: false,\r\n            \r\n            cubicInterpolationMode: 'monotone',\r\n            tension: 0.4,\r\n            pointStyle: 'circle',\r\n            pointRadius: 8,\r\n            pointHoverRadius: 16\r\n        }]\r\n    };\r\n\r\n    for(var i in dataPlot){\r\n        data2.datasets[0].data.push( JSON.parse(dataPlot[i]).gasoline )\r\n        data2.datasets[1].data.push( JSON.parse(dataPlot[i]).alchool )\r\n        data2.labels.push( new Date(JSON.parse(dataPlot[i]).date).toLocaleString('pt-br', {timeZoneName: \"short\"}).split(\" \")[0] );\r\n    }\r\n\r\n    const config = {\r\n        type: 'line',\r\n        data: data2,\r\n        \r\n    };\r\n    \r\n    myChart = new Chart(\r\n        document.querySelector('#line-chart'),\r\n        config\r\n    );\r\n}\r\n\r\nexport let updateLineChart = async function(data){\r\n    let dataPlot = dataOrderDateByFirst(data)\r\n\r\n    myChart.data.datasets[0].data.push( JSON.parse(dataPlot[dataPlot.length-1]).gasoline )\r\n    myChart.data.datasets[1].data.push( JSON.parse(dataPlot[dataPlot.length-1]).alchool )\r\n    myChart.data.labels.push( new Date(JSON.parse(dataPlot[dataPlot.length-1]).date).toLocaleString('pt-br', {timeZoneName: \"short\"}).split(\" \")[0] );\r\n    \r\n    myChart.update();\r\n}\r\n\r\nexport let plotHistogramTable = async function(data, totalResults){\r\n    //retorna os últimos 5 resultaods por default\r\n    totalResults = totalResults || data.length;\r\n    data = dataOrderDateByLast(data)\r\n    if(data.length > 0){\r\n        let html = `<table>\r\n            <tr>\r\n                <td colspan=\"5\"><h4>Histórico de preços anteriores</h4></td>\r\n            </tr>\r\n            <tr>\r\n                <th>Data</th>\r\n                <th>Melhor escolha</th>\r\n                <th>Preço alcool</th>\r\n                <th>Preço gasolina</th>\r\n                <th>Variação</th> \r\n            </tr>`\r\n        let obj = \"\";\r\n        for(let i = 0, limI = totalResults; i < limI; i++){\r\n            obj = eval (\"(\" + data[i] + \")\");\r\n            html += \"<tr>\"\r\n                html += `<td>${new Date(obj.date).toLocaleString('pt-br', {timeZoneName: \"short\"}).split(\" \")[0]}</td>`\r\n                html += `<td>${obj.fuel}</td>`\r\n                html += `<td>R$ ${obj.alchool.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}</td>`\r\n                \r\n                html += `<td>R$ ${obj.gasoline.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'})}</td>`\r\n                html += `<td>-</td>`\r\n                \r\n                \r\n            html += \"</tr>\"\r\n        }\r\n        html += \"<table>\"\r\n        $('.table-user-price-variation').html(html)\r\n    }\r\n}\r\n\r\nlet dataOrderDateByFirst = function(data){\r\n    data.sort( (a, b) =>{\r\n        a = JSON.parse(a);\r\n        b = JSON.parse(b);\r\n        if(a.date > b.date) return 1;\r\n        else if(a.date < b.date) return -1;\r\n    })\r\n    return data;\r\n}\r\n\r\nlet dataOrderDateByLast = function(data){\r\n    data.sort( (a, b) =>{\r\n        a = JSON.parse(a);\r\n        b = JSON.parse(b);\r\n        if(a.date > b.date) return -1;\r\n        else if(a.date < b.date) return 1;\r\n    })\r\n    return data;\r\n}"],"mappings":"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"}